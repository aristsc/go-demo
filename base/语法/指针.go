package main

import "fmt"

/**
Go 语言中指针是很容易学习的，Go 语言中使用指针可以更简单的执行一些任务。
变量是一种使用方便的占位符，用于引用计算机内存地址。Go 语言的取地址符是 &，放到一个变量前使用就会返回相应变量的内存地址。

什么是指针？
一个指针变量指向了一个值的内存地址

如何使用指针？
使用流程：
    定义指针变量。
    为指针变量赋值。
    访问指针变量中指向地址的值。
在指针类型前面加上 * 号（前缀）来获取指针所指向的内容。
*/
func main() {
	var a int = 20 /* 声明实际变量 */
	var ip *int    /* 声明指针变量 */
	var ptr *int   /* 空指针 */

	ip = &a /* 为指针变量赋值 */

	fmt.Printf("a 变量的地址是: %x\n", &a)

	/* 指针变量的存储地址 */
	fmt.Printf("ip 变量储存的指针地址: %x\n", ip)

	/* 使用指针访问值 */
	fmt.Printf("*ip 变量的值: %d\n", *ip)

	/* 空指针 */
	fmt.Printf("ptr 的值为 : %x\n", ptr)

}
